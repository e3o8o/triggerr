# =============================================================================
# INSUREINNIE ENVIRONMENT VARIABLES - COMPREHENSIVE EXAMPLE
# =============================================================================
# Copy this file to .env and fill in your actual values
# Never commit actual secrets to version control!

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION (REQUIRED)
# -----------------------------------------------------------------------------
# PostgreSQL connection string - choose one option below:

# Option 1: Local PostgreSQL
DATABASE_URL="postgresql://username:password@localhost:5432/triggerr"

# Option 2: Supabase (recommended for development)
# DATABASE_URL="postgresql://postgres.your-project:your-password@aws-0-region.pooler.supabase.com:6543/postgres"
# SUPABASE_SERVICE_ROLE_KEY="your-supabase-service-role-key"

# Option 3: Neon (alternative cloud option)
# DATABASE_URL="postgresql://username:password@ep-your-endpoint.region.aws.neon.tech/triggerr?sslmode=require"

# Option 4: Production setup
# DATABASE_URL="postgresql://username:password@your-host:5432/triggerr?sslmode=require"

# -----------------------------------------------------------------------------
# BETTER-AUTH CONFIGURATION (REQUIRED)
# -----------------------------------------------------------------------------
# Generate a secure secret (minimum 32 characters)
BETTER_AUTH_SECRET="your-super-secret-key-here-minimum-32-characters-required"

# Base URL for authentication
BETTER_AUTH_URL="http://localhost:3000"
BETTER_AUTH_BASE_PATH="/api/auth"

# Client-side URL (must be prefixed with NEXT_PUBLIC_)
NEXT_PUBLIC_BETTER_AUTH_URL="http://localhost:3000"

# Production examples:
# BETTER_AUTH_URL="https://yourdomain.com"
# NEXT_PUBLIC_BETTER_AUTH_URL="https://yourdomain.com"

# -----------------------------------------------------------------------------
# GOOGLE OAUTH CREDENTIALS (REQUIRED)
# -----------------------------------------------------------------------------
# Get these from Google Cloud Console: https://console.cloud.google.com/
# 1. Create a new project or select existing
# 2. Enable Google+ API
# 3. Create OAuth 2.0 credentials
# 4. Add authorized redirect URIs: http://localhost:3000/api/auth/callback/google

GOOGLE_CLIENT_ID="your-google-client-id.apps.googleusercontent.com"
GOOGLE_CLIENT_SECRET="your-google-client-secret"

# -----------------------------------------------------------------------------
# PAYGO BLOCKCHAIN CONFIGURATION (REQUIRED FOR WALLET OPERATIONS)
# -----------------------------------------------------------------------------
# PayGo testnet configuration (no signup required - use test keys)
PAYGO_ADMIN_PK="0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
PAYGO_NETWORK_URL="https://paygo-testnet-rpc.witnesschain.com"
PAYGO_NETWORK="testnet"

# Platform wallet addresses (for revenue collection)
PLATFORM_REVENUE_WALLET_ADDRESS="0xYourPlatformWalletAddress"
PLATFORM_REVENUE_WALLET_PRIVATE_KEY="0xYourPlatformWalletPrivateKey"

# Provider wallet configuration (example providers)
PROVIDER_INSUREINNIE_DIRECT_WALLET_ADDRESS=""
PROVIDER_INSUREINNIE_DIRECT_WALLET_PRIVATE_KEY=""

# -----------------------------------------------------------------------------
# LLM SERVICES CONFIGURATION (REQUIRED FOR CHAT)
# -----------------------------------------------------------------------------
# DeepSeek API (primary LLM provider)
# Get API key from: https://platform.deepseek.com/
DEEPSEEK_API_KEY="sk-your-deepseek-api-key"
DEEPSEEK_BASE_URL="https://api.deepseek.com/v1"
DEFAULT_LLM_PROVIDER="deepseek"

# Future custom LLM configuration
CUSTOM_LLM_ENABLED="false"
CUSTOM_LLM_BASE_URL="http://localhost:11434"

# -----------------------------------------------------------------------------
# FLIGHT DATA APIS (REQUIRED FOR INSURANCE FUNCTIONALITY)
# -----------------------------------------------------------------------------

# AviationStack (Primary - Free tier: 500 requests/month)
# Sign up at: https://aviationstack.com/
AVIATIONSTACK_API_KEY="your-aviationstack-api-key"
AVIATIONSTACK_BASE_URL="http://api.aviationstack.com/v1"

# FlightAware AeroAPI (Premium - Personal plan: 1,000 requests/month)
# Sign up at: https://flightaware.com/commercial/aeroapi/
FLIGHTAWARE_API_KEY="your-flightaware-api-key"
FLIGHTAWARE_BASE_URL="https://aeroapi.flightaware.com/aeroapi"

# OpenSky Network (Free - requires registration)
# Register at: https://opensky-network.org/
OPENSKY_USERNAME="your-opensky-username"
OPENSKY_PASSWORD="your-opensky-password"
OPENSKY_BASE_URL="https://opensky-network.org/api"

# -----------------------------------------------------------------------------
# WEATHER DATA APIS (REQUIRED FOR RISK ASSESSMENT)
# -----------------------------------------------------------------------------

# Google Weather API (Primary)
# Enable at: https://console.cloud.google.com/apis/library/weather.googleapis.com
GOOGLE_WEATHER_API_KEY="your-google-weather-api-key"
GOOGLE_WEATHER_BASE_URL="https://weather.googleapis.com/v1"

# OpenWeatherMap (Secondary/Fallback)
# Get API key from: https://openweathermap.org/api
OPENWEATHER_API_KEY="your-openweathermap-api-key"
OPENWEATHER_BASE_URL="https://api.openweathermap.org/data/2.5"

# -----------------------------------------------------------------------------
# INTERNAL API CONFIGURATION (REQUIRED FOR SYSTEM OPERATIONS)
# -----------------------------------------------------------------------------
# Internal API key for system-to-system communication
INTERNAL_API_KEY="your-internal-api-key-for-system-operations"

# Encryption key for sensitive data (wallet private keys, etc.)
# Generate a random 64-character hex string
ENCRYPTION_KEY="your-64-character-hex-encryption-key-for-wallet-private-keys"

# -----------------------------------------------------------------------------
# STRIPE PAYMENT INTEGRATION (OPTIONAL - FOR FIAT PAYMENTS)
# -----------------------------------------------------------------------------
# Get these from Stripe Dashboard: https://dashboard.stripe.com/apikeys

# Test keys (for development)
TEST_PUBLISHABLE_KEY="pk_test_your-test-publishable-key"
TEST_SECRET_KEY="sk_test_your-test-secret-key"

# Production keys (for live environment)
STRIPE_API_KEY="sk_live_your-production-secret-key"
STRIPE_WEBHOOK_SECRET="whsec_your-webhook-secret"

# Stripe product/plan IDs (create these in Stripe Dashboard)
NEXT_PUBLIC_STRIPE_PRO_MONTHLY_PLAN_ID="price_your-pro-monthly-plan"
NEXT_PUBLIC_STRIPE_PRO_YEARLY_PLAN_ID="price_your-pro-yearly-plan"
NEXT_PUBLIC_STRIPE_BUSINESS_MONTHLY_PLAN_ID="price_your-business-monthly-plan"
NEXT_PUBLIC_STRIPE_BUSINESS_YEARLY_PLAN_ID="price_your-business-yearly-plan"

# -----------------------------------------------------------------------------
# DEVELOPMENT CONFIGURATION
# -----------------------------------------------------------------------------
# Environment setting
NODE_ENV="development"

# Debug logging (use * to enable all, or specific modules)
DEBUG="triggerr:*"

# Development feature flags
ENABLE_MOCK_APIS="false"
ENABLE_TEST_WEBHOOKS="false"

# API service port (for apps/api)
API_PORT="4000"

# -----------------------------------------------------------------------------
# CACHE AND RATE LIMITING (OPTIONAL)
# -----------------------------------------------------------------------------
# Cache TTL settings (in milliseconds)
FLIGHT_DATA_CACHE_TTL="300000"     # 5 minutes
WEATHER_DATA_CACHE_TTL="3600000"   # 1 hour
QUOTE_CACHE_TTL="1800000"          # 30 minutes

# Rate limiting settings (requests per day)
AVIATIONSTACK_DAILY_LIMIT="500"
FLIGHTAWARE_DAILY_LIMIT="100"
OPENSKY_DAILY_LIMIT="4000"
DEEPSEEK_RATE_LIMIT="1000"

# -----------------------------------------------------------------------------
# INSURANCE BUSINESS CONFIGURATION (OPTIONAL)
# -----------------------------------------------------------------------------
# Quote engine parameters
BASE_RATE_ECONOMY="0.035"
BASE_RATE_BUSINESS="0.045"
BASE_RATE_FIRST_CLASS="0.060"

# Risk calculation bounds
MIN_RISK_MULTIPLIER="0.8"
MAX_RISK_MULTIPLIER="2.5"

# Weather risk thresholds
WEATHER_PRECIPITATION_THRESHOLD="30"
WEATHER_WIND_THRESHOLD="40"
WEATHER_STORM_MULTIPLIER="1.6"

# Policy limits
MAX_COVERAGE_AMOUNT="10000.00"
MIN_COVERAGE_AMOUNT="50.00"
DEFAULT_DELAY_THRESHOLD="60"
QUOTE_VALIDITY_MINUTES="1440"

# -----------------------------------------------------------------------------
# MONITORING AND ALERTS (OPTIONAL)
# -----------------------------------------------------------------------------
# Flight monitoring intervals (in milliseconds)
FLIGHT_MONITOR_INTERVAL="600000"      # 10 minutes
PAYOUT_PROCESSING_INTERVAL="300000"   # 5 minutes

# Delay thresholds for automatic payouts (in minutes)
DELAY_THRESHOLD_MINOR="60"
DELAY_THRESHOLD_MAJOR="120"
DELAY_THRESHOLD_SEVERE="240"

# External monitoring services
SENTRY_DSN="your-sentry-dsn-for-error-tracking"
GOOGLE_ANALYTICS_ID="GA-XXXXXXXXX"

# -----------------------------------------------------------------------------
# PRODUCTION CONFIGURATION (FOR DEPLOYMENT)
# -----------------------------------------------------------------------------
# Trusted origins for CORS
TRUSTED_ORIGINS="https://yourdomain.com,https://api.yourdomain.com"

# CDN configuration
CDN_URL="https://cdn.yourdomain.com"

# Session configuration
SESSION_MAX_AGE="604800"    # 7 days
SESSION_UPDATE_AGE="86400"  # 1 day

# Redis for caching (optional)
REDIS_URL="redis://localhost:6379"

# -----------------------------------------------------------------------------
# BACKUP AND DISASTER RECOVERY (PRODUCTION)
# -----------------------------------------------------------------------------
# AWS S3 for file storage and backups
AWS_ACCESS_KEY_ID="your-aws-access-key"
AWS_SECRET_ACCESS_KEY="your-aws-secret-key"
AWS_REGION="us-east-1"
AWS_S3_BUCKET="your-backup-bucket"

# Backup database URL
BACKUP_DATABASE_URL="postgresql://backup-user:backup-pass@backup-host:5432/triggerr_backup"

# -----------------------------------------------------------------------------
# FEATURE FLAGS (OPTIONAL)
# -----------------------------------------------------------------------------
# MVP feature toggles
ENABLE_MULTI_PROVIDER="false"
ENABLE_ADVANCED_ANALYTICS="false"
ENABLE_WEBHOOK_SYSTEM="false"
ENABLE_ADMIN_DASHBOARD="false"

# Insurance product features
ENABLE_CANCELLATION_COVERAGE="false"
ENABLE_BAGGAGE_COVERAGE="false"
ENABLE_WEATHER_COVERAGE="false"

# System feature flags
ENABLE_FLIGHT_MONITORING="true"
ENABLE_AUTOMATIC_PAYOUTS="false"
ENABLE_WEATHER_RISK="true"
ENABLE_LLM_SERVICES="true"

# Testing and development flags
TEST_MODE="false"
USE_MOCK_APIS="false"
MOCK_FLIGHT_DELAYS="false"

# Logging configuration
LOG_LEVEL="info"
API_REQUEST_LOGGING="true"
QUOTE_CALCULATION_LOGGING="true"

# -----------------------------------------------------------------------------
# WEBHOOK CONFIGURATION (ADVANCED)
# -----------------------------------------------------------------------------
# External webhook endpoints
PAYGO_WEBHOOK_URL="https://yourdomain.com/api/webhooks/paygo"
FLIGHTAWARE_WEBHOOK_URL="https://yourdomain.com/api/webhooks/flightaware"

# Webhook secrets
PAYGO_WEBHOOK_SECRET="your-paygo-webhook-secret"
FLIGHTAWARE_WEBHOOK_SECRET="your-flightaware-webhook-secret"

# =============================================================================
# QUICK SETUP GUIDE
# =============================================================================

# STEP 1: DATABASE SETUP (REQUIRED)
# 1. Choose a database option above and set DATABASE_URL
# 2. Run: bun run db:migrate
# 3. Run: bun run db:seed

# STEP 2: AUTHENTICATION SETUP (REQUIRED)
# 1. Generate BETTER_AUTH_SECRET (32+ characters)
# 2. Create Google OAuth app at console.cloud.google.com
# 3. Set GOOGLE_CLIENT_ID and GOOGLE_CLIENT_SECRET

# STEP 3: BLOCKCHAIN SETUP (REQUIRED)
# 1. Use provided test PAYGO_ADMIN_PK for development
# 2. For production, generate secure private keys
# 3. Set ENCRYPTION_KEY for wallet security

# STEP 4: EXTERNAL APIS (RECOMMENDED)
# 1. Sign up for flight data APIs (AviationStack, FlightAware, OpenSky)
# 2. Get weather API keys (Google, OpenWeatherMap)
# 3. Get DeepSeek API key for chat functionality

# STEP 5: START DEVELOPMENT
# 1. Copy this file to .env
# 2. Fill in required values
# 3. Run: bun install
# 4. Run: bun run dev

# =============================================================================
# SECURITY NOTES
# =============================================================================
# - Never commit .env files with real secrets
# - Use different keys for development/staging/production
# - Rotate secrets regularly in production
# - Use environment-specific .env files (.env.local, .env.production)
# - Encrypt sensitive data at rest
# - Use HTTPS in production
# - Implement proper access controls
# - Monitor for API key usage and potential breaches

# =============================================================================
# TROUBLESHOOTING
# =============================================================================
# - Check API server logs at apps/api for errors
# - Verify database connectivity with health checks
# - Test PayGo integration with provided test script
# - Use health check endpoints: /api/v1/health
# - Enable DEBUG logging for detailed troubleshooting
# - Check network connectivity for external APIs
# - Verify OAuth redirect URIs match configuration
