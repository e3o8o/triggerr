{
  "id": "a95296ac-befe-497f-9b08-ba47775a61bd",
  "prevId": "43807139-329b-4b6f-807a-37273c9e5a5a",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.account": {
      "name": "account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token_expires_at": {
          "name": "access_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "account_user_id_user_id_fk": {
          "name": "account_user_id_user_id_fk",
          "tableFrom": "account",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.aircraft_types": {
      "name": "aircraft_types",
      "schema": "",
      "columns": {
        "icao_code": {
          "name": "icao_code",
          "type": "varchar(4)",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "iata_code": {
          "name": "iata_code",
          "type": "varchar(3)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.airline": {
      "name": "airline",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "alias": {
          "name": "alias",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "iata_code": {
          "name": "iata_code",
          "type": "char(2)",
          "primaryKey": false,
          "notNull": false
        },
        "icao_code": {
          "name": "icao_code",
          "type": "char(3)",
          "primaryKey": false,
          "notNull": false
        },
        "callsign": {
          "name": "callsign",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "fleet_size": {
          "name": "fleet_size",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "headquarters": {
          "name": "headquarters",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country_iso_code": {
          "name": "country_iso_code",
          "type": "char(2)",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "airline_iata_idx": {
          "name": "airline_iata_idx",
          "columns": [
            {
              "expression": "iata_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "airline_icao_idx": {
          "name": "airline_icao_idx",
          "columns": [
            {
              "expression": "icao_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "airline_country_idx": {
          "name": "airline_country_idx",
          "columns": [
            {
              "expression": "country_iso_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "airline_country_iso_code_countries_iso_code_fk": {
          "name": "airline_country_iso_code_countries_iso_code_fk",
          "tableFrom": "airline",
          "tableTo": "countries",
          "columnsFrom": [
            "country_iso_code"
          ],
          "columnsTo": [
            "iso_code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "airline_iata_code_unique": {
          "name": "airline_iata_code_unique",
          "nullsNotDistinct": false,
          "columns": [
            "iata_code"
          ]
        },
        "airline_icao_code_unique": {
          "name": "airline_icao_code_unique",
          "nullsNotDistinct": false,
          "columns": [
            "icao_code"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.airport": {
      "name": "airport",
      "schema": "",
      "columns": {
        "iata_code": {
          "name": "iata_code",
          "type": "char(3)",
          "primaryKey": true,
          "notNull": true
        },
        "icao_code": {
          "name": "icao_code",
          "type": "char(4)",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "state_or_province": {
          "name": "state_or_province",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "region_iso_code": {
          "name": "region_iso_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country_iso_code": {
          "name": "country_iso_code",
          "type": "char(2)",
          "primaryKey": false,
          "notNull": true
        },
        "latitude": {
          "name": "latitude",
          "type": "numeric(10, 7)",
          "primaryKey": false,
          "notNull": true
        },
        "longitude": {
          "name": "longitude",
          "type": "numeric(10, 7)",
          "primaryKey": false,
          "notNull": true
        },
        "altitude_ft": {
          "name": "altitude_ft",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "timezone_olson": {
          "name": "timezone_olson",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "airport_type": {
          "name": "airport_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scheduled_service": {
          "name": "scheduled_service",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "wikipedia_link": {
          "name": "wikipedia_link",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "home_link": {
          "name": "home_link",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "airport_icao_idx": {
          "name": "airport_icao_idx",
          "columns": [
            {
              "expression": "icao_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "airport_country_idx": {
          "name": "airport_country_idx",
          "columns": [
            {
              "expression": "country_iso_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "airport_city_idx": {
          "name": "airport_city_idx",
          "columns": [
            {
              "expression": "city",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "airport_region_iso_code_regions_code_fk": {
          "name": "airport_region_iso_code_regions_code_fk",
          "tableFrom": "airport",
          "tableTo": "regions",
          "columnsFrom": [
            "region_iso_code"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "airport_country_iso_code_countries_iso_code_fk": {
          "name": "airport_country_iso_code_countries_iso_code_fk",
          "tableFrom": "airport",
          "tableTo": "countries",
          "columnsFrom": [
            "country_iso_code"
          ],
          "columnsTo": [
            "iso_code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "airport_icao_code_unique": {
          "name": "airport_icao_code_unique",
          "nullsNotDistinct": false,
          "columns": [
            "icao_code"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.api_key": {
      "name": "api_key",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "api_key_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "permissions": {
          "name": "permissions",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "last_used_at": {
          "name": "last_used_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "rate_limit": {
          "name": "rate_limit",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1000
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "api_key_user_id_user_id_fk": {
          "name": "api_key_user_id_user_id_fk",
          "tableFrom": "api_key",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "api_key_provider_id_provider_id_fk": {
          "name": "api_key_provider_id_provider_id_fk",
          "tableFrom": "api_key",
          "tableTo": "provider",
          "columnsFrom": [
            "provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "api_key_key_unique": {
          "name": "api_key_key_unique",
          "nullsNotDistinct": false,
          "columns": [
            "key"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.api_logs": {
      "name": "api_logs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "request_id": {
          "name": "request_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "timestamp": {
          "name": "timestamp",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "api_key_id": {
          "name": "api_key_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "anonymous_session_id": {
          "name": "anonymous_session_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "method": {
          "name": "method",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status_code": {
          "name": "status_code",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "latency_ms": {
          "name": "latency_ms",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "inet",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "request_payload_hash": {
          "name": "request_payload_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "response_payload_hash": {
          "name": "response_payload_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "error_message": {
          "name": "error_message",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "rate_limit_hit": {
          "name": "rate_limit_hit",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        }
      },
      "indexes": {
        "api_logs_timestamp_idx": {
          "name": "api_logs_timestamp_idx",
          "columns": [
            {
              "expression": "timestamp",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "api_logs_user_idx": {
          "name": "api_logs_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "api_logs_endpoint_idx": {
          "name": "api_logs_endpoint_idx",
          "columns": [
            {
              "expression": "endpoint",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "api_logs_status_idx": {
          "name": "api_logs_status_idx",
          "columns": [
            {
              "expression": "status_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "api_logs_request_id_idx": {
          "name": "api_logs_request_id_idx",
          "columns": [
            {
              "expression": "request_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "api_logs_user_id_user_id_fk": {
          "name": "api_logs_user_id_user_id_fk",
          "tableFrom": "api_logs",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "api_logs_api_key_id_api_key_id_fk": {
          "name": "api_logs_api_key_id_api_key_id_fk",
          "tableFrom": "api_logs",
          "tableTo": "api_key",
          "columnsFrom": [
            "api_key_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.audit_log": {
      "name": "audit_log",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "action": {
          "name": "action",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "resource": {
          "name": "resource",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "resource_id": {
          "name": "resource_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "old_values": {
          "name": "old_values",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "new_values": {
          "name": "new_values",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "audit_log_user_idx": {
          "name": "audit_log_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "audit_log_provider_idx": {
          "name": "audit_log_provider_idx",
          "columns": [
            {
              "expression": "provider_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "audit_log_action_idx": {
          "name": "audit_log_action_idx",
          "columns": [
            {
              "expression": "action",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "audit_log_resource_idx": {
          "name": "audit_log_resource_idx",
          "columns": [
            {
              "expression": "resource",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "resource_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "audit_log_user_id_user_id_fk": {
          "name": "audit_log_user_id_user_id_fk",
          "tableFrom": "audit_log",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "audit_log_provider_id_provider_id_fk": {
          "name": "audit_log_provider_id_provider_id_fk",
          "tableFrom": "audit_log",
          "tableTo": "provider",
          "columnsFrom": [
            "provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.beneficiaries": {
      "name": "beneficiaries",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "policy_id": {
          "name": "policy_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "relationship": {
          "name": "relationship",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "percentage": {
          "name": "percentage",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "beneficiary_type_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "beneficiaries_policy_idx": {
          "name": "beneficiaries_policy_idx",
          "columns": [
            {
              "expression": "policy_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "beneficiaries_type_idx": {
          "name": "beneficiaries_type_idx",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "beneficiaries_policy_id_policy_id_fk": {
          "name": "beneficiaries_policy_id_policy_id_fk",
          "tableFrom": "beneficiaries",
          "tableTo": "policy",
          "columnsFrom": [
            "policy_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.cache_entry": {
      "name": "cache_entry",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "cache_key": {
          "name": "cache_key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "tags": {
          "name": "tags",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "cache_entry_expires_at_idx": {
          "name": "cache_entry_expires_at_idx",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "cache_entry_key_unique": {
          "name": "cache_entry_key_unique",
          "nullsNotDistinct": false,
          "columns": [
            "cache_key"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.conversation_messages": {
      "name": "conversation_messages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "conversation_id": {
          "name": "conversation_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "anonymous_session_id": {
          "name": "anonymous_session_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "conversation_message_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "ui_elements": {
          "name": "ui_elements",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "conversation_messages_conversation_idx": {
          "name": "conversation_messages_conversation_idx",
          "columns": [
            {
              "expression": "conversation_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "conversation_messages_created_idx": {
          "name": "conversation_messages_created_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "conversation_messages_role_idx": {
          "name": "conversation_messages_role_idx",
          "columns": [
            {
              "expression": "role",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "conversation_messages_conversation_id_conversations_id_fk": {
          "name": "conversation_messages_conversation_id_conversations_id_fk",
          "tableFrom": "conversation_messages",
          "tableTo": "conversations",
          "columnsFrom": [
            "conversation_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "conversation_messages_user_id_user_id_fk": {
          "name": "conversation_messages_user_id_user_id_fk",
          "tableFrom": "conversation_messages",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "conversation_messages_anonymous_session_id_session_id_fk": {
          "name": "conversation_messages_anonymous_session_id_session_id_fk",
          "tableFrom": "conversation_messages",
          "tableTo": "session",
          "columnsFrom": [
            "anonymous_session_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.conversations": {
      "name": "conversations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "anonymous_session_id": {
          "name": "anonymous_session_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "initial_search_query": {
          "name": "initial_search_query",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "current_flight_context": {
          "name": "current_flight_context",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "current_insurance_preferences": {
          "name": "current_insurance_preferences",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "current_ota_context": {
          "name": "current_ota_context",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "conversations_user_idx": {
          "name": "conversations_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "conversations_anon_session_idx": {
          "name": "conversations_anon_session_idx",
          "columns": [
            {
              "expression": "anonymous_session_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "conversations_created_idx": {
          "name": "conversations_created_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "conversations_user_id_user_id_fk": {
          "name": "conversations_user_id_user_id_fk",
          "tableFrom": "conversations",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "conversations_anonymous_session_id_unique": {
          "name": "conversations_anonymous_session_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "anonymous_session_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.countries": {
      "name": "countries",
      "schema": "",
      "columns": {
        "iso_code": {
          "name": "iso_code",
          "type": "char(2)",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "iso_alpha3_code": {
          "name": "iso_alpha3_code",
          "type": "char(3)",
          "primaryKey": false,
          "notNull": false
        },
        "continent": {
          "name": "continent",
          "type": "continent_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.endorsements": {
      "name": "endorsements",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "policy_id": {
          "name": "policy_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "endorsement_type_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "effective_date": {
          "name": "effective_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "endorsements_policy_idx": {
          "name": "endorsements_policy_idx",
          "columns": [
            {
              "expression": "policy_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "endorsements_type_idx": {
          "name": "endorsements_type_idx",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "endorsements_effective_date_idx": {
          "name": "endorsements_effective_date_idx",
          "columns": [
            {
              "expression": "effective_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "endorsements_policy_id_policy_id_fk": {
          "name": "endorsements_policy_id_policy_id_fk",
          "tableFrom": "endorsements",
          "tableTo": "policy",
          "columnsFrom": [
            "policy_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.escrow": {
      "name": "escrow",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "internal_id": {
          "name": "internal_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "blockchain_id": {
          "name": "blockchain_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "escrow_type": {
          "name": "escrow_type",
          "type": "escrow_type_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "policy_id": {
          "name": "policy_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "purpose": {
          "name": "purpose",
          "type": "escrow_purpose_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "amount": {
          "name": "amount",
          "type": "numeric(15, 6)",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "escrow_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'PENDING'"
        },
        "chain": {
          "name": "chain",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "escrow_model": {
          "name": "escrow_model",
          "type": "escrow_model_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'SINGLE_SIDED'"
        },
        "premium_return_policy": {
          "name": "premium_return_policy",
          "type": "premium_return_policy",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'PROVIDER_KEEPS_PREMIUM'"
        },
        "collateral_amount": {
          "name": "collateral_amount",
          "type": "numeric(15, 6)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0.00'"
        },
        "pool_id": {
          "name": "pool_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "escrow_configuration": {
          "name": "escrow_configuration",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "tx_hash": {
          "name": "tx_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "block_number": {
          "name": "block_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "gas_used": {
          "name": "gas_used",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "fulfiller_address": {
          "name": "fulfiller_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "v_key": {
          "name": "v_key",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "fulfilled_at": {
          "name": "fulfilled_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "released_at": {
          "name": "released_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "error_message": {
          "name": "error_message",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "escrow_type_idx": {
          "name": "escrow_type_idx",
          "columns": [
            {
              "expression": "escrow_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "escrow_purpose_idx": {
          "name": "escrow_purpose_idx",
          "columns": [
            {
              "expression": "purpose",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "escrow_user_idx": {
          "name": "escrow_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "escrow_policy_idx": {
          "name": "escrow_policy_idx",
          "columns": [
            {
              "expression": "policy_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "escrow_provider_idx": {
          "name": "escrow_provider_idx",
          "columns": [
            {
              "expression": "provider_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "escrow_status_idx": {
          "name": "escrow_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "escrow_blockchain_idx": {
          "name": "escrow_blockchain_idx",
          "columns": [
            {
              "expression": "blockchain_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "escrow_expires_idx": {
          "name": "escrow_expires_idx",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "escrow_internal_id_idx": {
          "name": "escrow_internal_id_idx",
          "columns": [
            {
              "expression": "internal_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "escrow_user_id_user_id_fk": {
          "name": "escrow_user_id_user_id_fk",
          "tableFrom": "escrow",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "escrow_policy_id_policy_id_fk": {
          "name": "escrow_policy_id_policy_id_fk",
          "tableFrom": "escrow",
          "tableTo": "policy",
          "columnsFrom": [
            "policy_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "escrow_provider_id_provider_id_fk": {
          "name": "escrow_provider_id_provider_id_fk",
          "tableFrom": "escrow",
          "tableTo": "provider",
          "columnsFrom": [
            "provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "escrow_pool_id_escrow_pool_id_fk": {
          "name": "escrow_pool_id_escrow_pool_id_fk",
          "tableFrom": "escrow",
          "tableTo": "escrow_pool",
          "columnsFrom": [
            "pool_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "escrow_internal_id_unique": {
          "name": "escrow_internal_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "internal_id"
          ]
        },
        "escrow_blockchain_id_unique": {
          "name": "escrow_blockchain_id_unique",
          "nullsNotDistinct": true,
          "columns": [
            "blockchain_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.escrow_pool": {
      "name": "escrow_pool",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "escrow_model": {
          "name": "escrow_model",
          "type": "escrow_model_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "total_capacity": {
          "name": "total_capacity",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "available_balance": {
          "name": "available_balance",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0.00'"
        },
        "reserved_balance": {
          "name": "reserved_balance",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0.00'"
        },
        "minimum_balance": {
          "name": "minimum_balance",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0.00'"
        },
        "pool_address": {
          "name": "pool_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "collateral_ratio": {
          "name": "collateral_ratio",
          "type": "numeric(5, 4)",
          "primaryKey": false,
          "notNull": true,
          "default": "'1.0000'"
        },
        "max_policy_count": {
          "name": "max_policy_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "max_policy_amount": {
          "name": "max_policy_amount",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "health_score": {
          "name": "health_score",
          "type": "numeric(5, 4)",
          "primaryKey": false,
          "notNull": false,
          "default": "'1.0000'"
        },
        "last_rebalance_at": {
          "name": "last_rebalance_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "next_rebalance_due": {
          "name": "next_rebalance_due",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "configuration": {
          "name": "configuration",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "audited_at": {
          "name": "audited_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "audit_report": {
          "name": "audit_report",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "bond_amount": {
          "name": "bond_amount",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "bond_provider": {
          "name": "bond_provider",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "pool_provider_idx": {
          "name": "pool_provider_idx",
          "columns": [
            {
              "expression": "provider_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "pool_model_idx": {
          "name": "pool_model_idx",
          "columns": [
            {
              "expression": "escrow_model",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "pool_address_idx": {
          "name": "pool_address_idx",
          "columns": [
            {
              "expression": "pool_address",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "pool_status_idx": {
          "name": "pool_status_idx",
          "columns": [
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "pool_health_idx": {
          "name": "pool_health_idx",
          "columns": [
            {
              "expression": "health_score",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "escrow_pool_provider_id_provider_id_fk": {
          "name": "escrow_pool_provider_id_provider_id_fk",
          "tableFrom": "escrow_pool",
          "tableTo": "provider",
          "columnsFrom": [
            "provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "escrow_pool_address_unique": {
          "name": "escrow_pool_address_unique",
          "nullsNotDistinct": false,
          "columns": [
            "pool_address"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.escrow_pool_participant": {
      "name": "escrow_pool_participant",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "pool_id": {
          "name": "pool_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "participant_address": {
          "name": "participant_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "contribution_amount": {
          "name": "contribution_amount",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "share_percentage": {
          "name": "share_percentage",
          "type": "numeric(8, 6)",
          "primaryKey": false,
          "notNull": true
        },
        "locked_until": {
          "name": "locked_until",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "risk_tolerance": {
          "name": "risk_tolerance",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "preferred_categories": {
          "name": "preferred_categories",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "total_returns": {
          "name": "total_returns",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0.00'"
        },
        "realized_returns": {
          "name": "realized_returns",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0.00'"
        },
        "unrealized_returns": {
          "name": "unrealized_returns",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0.00'"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "joined_at": {
          "name": "joined_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "exited_at": {
          "name": "exited_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "pool_participant_pool_idx": {
          "name": "pool_participant_pool_idx",
          "columns": [
            {
              "expression": "pool_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "pool_participant_user_idx": {
          "name": "pool_participant_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "pool_participant_share_idx": {
          "name": "pool_participant_share_idx",
          "columns": [
            {
              "expression": "share_percentage",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "pool_participant_status_idx": {
          "name": "pool_participant_status_idx",
          "columns": [
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "escrow_pool_participant_pool_id_escrow_pool_id_fk": {
          "name": "escrow_pool_participant_pool_id_escrow_pool_id_fk",
          "tableFrom": "escrow_pool_participant",
          "tableTo": "escrow_pool",
          "columnsFrom": [
            "pool_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "escrow_pool_participant_user_id_user_id_fk": {
          "name": "escrow_pool_participant_user_id_user_id_fk",
          "tableFrom": "escrow_pool_participant",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.flight": {
      "name": "flight",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "flight_number": {
          "name": "flight_number",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "airline_icao_code": {
          "name": "airline_icao_code",
          "type": "char(3)",
          "primaryKey": false,
          "notNull": false
        },
        "departure_airport_iata_code": {
          "name": "departure_airport_iata_code",
          "type": "char(3)",
          "primaryKey": false,
          "notNull": true
        },
        "arrival_airport_iata_code": {
          "name": "arrival_airport_iata_code",
          "type": "char(3)",
          "primaryKey": false,
          "notNull": true
        },
        "departure_scheduled_at": {
          "name": "departure_scheduled_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "arrival_scheduled_at": {
          "name": "arrival_scheduled_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "departure_actual_at": {
          "name": "departure_actual_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "arrival_actual_at": {
          "name": "arrival_actual_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "flight_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'SCHEDULED'"
        },
        "aircraft_icao_code": {
          "name": "aircraft_icao_code",
          "type": "varchar(4)",
          "primaryKey": false,
          "notNull": false
        },
        "gate": {
          "name": "gate",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "terminal": {
          "name": "terminal",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "delay_minutes": {
          "name": "delay_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "source_data": {
          "name": "source_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "last_updated_at": {
          "name": "last_updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "flight_flight_number_idx": {
          "name": "flight_flight_number_idx",
          "columns": [
            {
              "expression": "flight_number",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "flight_departure_idx": {
          "name": "flight_departure_idx",
          "columns": [
            {
              "expression": "departure_scheduled_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "flight_status_idx": {
          "name": "flight_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "flight_airline_icao_idx": {
          "name": "flight_airline_icao_idx",
          "columns": [
            {
              "expression": "airline_icao_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "flight_dep_airport_iata_idx": {
          "name": "flight_dep_airport_iata_idx",
          "columns": [
            {
              "expression": "departure_airport_iata_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "flight_arr_airport_iata_idx": {
          "name": "flight_arr_airport_iata_idx",
          "columns": [
            {
              "expression": "arrival_airport_iata_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "flight_airline_icao_code_airline_icao_code_fk": {
          "name": "flight_airline_icao_code_airline_icao_code_fk",
          "tableFrom": "flight",
          "tableTo": "airline",
          "columnsFrom": [
            "airline_icao_code"
          ],
          "columnsTo": [
            "icao_code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "flight_departure_airport_iata_code_airport_iata_code_fk": {
          "name": "flight_departure_airport_iata_code_airport_iata_code_fk",
          "tableFrom": "flight",
          "tableTo": "airport",
          "columnsFrom": [
            "departure_airport_iata_code"
          ],
          "columnsTo": [
            "iata_code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "flight_arrival_airport_iata_code_airport_iata_code_fk": {
          "name": "flight_arrival_airport_iata_code_airport_iata_code_fk",
          "tableFrom": "flight",
          "tableTo": "airport",
          "columnsFrom": [
            "arrival_airport_iata_code"
          ],
          "columnsTo": [
            "iata_code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "flight_aircraft_icao_code_aircraft_types_icao_code_fk": {
          "name": "flight_aircraft_icao_code_aircraft_types_icao_code_fk",
          "tableFrom": "flight",
          "tableTo": "aircraft_types",
          "columnsFrom": [
            "aircraft_icao_code"
          ],
          "columnsTo": [
            "icao_code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_flight_schedule": {
          "name": "unique_flight_schedule",
          "nullsNotDistinct": false,
          "columns": [
            "flight_number",
            "departure_scheduled_at",
            "departure_airport_iata_code",
            "airline_icao_code"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.flight_data_source": {
      "name": "flight_data_source",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "endpoint": {
          "name": "endpoint",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "priority": {
          "name": "priority",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "rate_limit": {
          "name": "rate_limit",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 1000
        },
        "health_status": {
          "name": "health_status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'unknown'"
        },
        "last_health_check": {
          "name": "last_health_check",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "success_rate": {
          "name": "success_rate",
          "type": "numeric(5, 4)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0.0000'"
        },
        "average_response_time": {
          "name": "average_response_time",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "cost_per_request": {
          "name": "cost_per_request",
          "type": "numeric(10, 8)",
          "primaryKey": false,
          "notNull": false
        },
        "configuration": {
          "name": "configuration",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "data_source_name_idx": {
          "name": "data_source_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "data_source_priority_idx": {
          "name": "data_source_priority_idx",
          "columns": [
            {
              "expression": "priority",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "data_source_health_idx": {
          "name": "data_source_health_idx",
          "columns": [
            {
              "expression": "health_status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "flight_data_source_name_unique": {
          "name": "flight_data_source_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.historical_flight_segments": {
      "name": "historical_flight_segments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "iata_flight_number": {
          "name": "iata_flight_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "icao_flight_number": {
          "name": "icao_flight_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "flightaware_flight_id": {
          "name": "flightaware_flight_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "aircraft_registration": {
          "name": "aircraft_registration",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "airline_icao_code": {
          "name": "airline_icao_code",
          "type": "char(3)",
          "primaryKey": false,
          "notNull": false
        },
        "origin_airport_iata_code": {
          "name": "origin_airport_iata_code",
          "type": "char(3)",
          "primaryKey": false,
          "notNull": true
        },
        "destination_airport_iata_code": {
          "name": "destination_airport_iata_code",
          "type": "char(3)",
          "primaryKey": false,
          "notNull": true
        },
        "scheduled_departure_timestamp_utc": {
          "name": "scheduled_departure_timestamp_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "estimated_departure_timestamp_utc": {
          "name": "estimated_departure_timestamp_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "actual_departure_timestamp_utc": {
          "name": "actual_departure_timestamp_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "gate_departure_scheduled_utc": {
          "name": "gate_departure_scheduled_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "gate_departure_actual_utc": {
          "name": "gate_departure_actual_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "runway_departure_scheduled_utc": {
          "name": "runway_departure_scheduled_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "runway_departure_actual_utc": {
          "name": "runway_departure_actual_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "departure_terminal": {
          "name": "departure_terminal",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "departure_runway": {
          "name": "departure_runway",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "departure_gate": {
          "name": "departure_gate",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scheduled_arrival_timestamp_utc": {
          "name": "scheduled_arrival_timestamp_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "estimated_arrival_timestamp_utc": {
          "name": "estimated_arrival_timestamp_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "actual_arrival_timestamp_utc": {
          "name": "actual_arrival_timestamp_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "gate_arrival_scheduled_utc": {
          "name": "gate_arrival_scheduled_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "gate_arrival_actual_utc": {
          "name": "gate_arrival_actual_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "runway_arrival_scheduled_utc": {
          "name": "runway_arrival_scheduled_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "runway_arrival_actual_utc": {
          "name": "runway_arrival_actual_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "arrival_terminal": {
          "name": "arrival_terminal",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "arrival_runway": {
          "name": "arrival_runway",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "arrival_gate": {
          "name": "arrival_gate",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "departure_delay_minutes": {
          "name": "departure_delay_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "arrival_delay_minutes": {
          "name": "arrival_delay_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "aircraft_icao_code": {
          "name": "aircraft_icao_code",
          "type": "varchar(4)",
          "primaryKey": false,
          "notNull": false
        },
        "live_latitude": {
          "name": "live_latitude",
          "type": "numeric(10, 7)",
          "primaryKey": false,
          "notNull": false
        },
        "live_longitude": {
          "name": "live_longitude",
          "type": "numeric(10, 7)",
          "primaryKey": false,
          "notNull": false
        },
        "live_altitude_ft": {
          "name": "live_altitude_ft",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "live_speed_kph": {
          "name": "live_speed_kph",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "live_heading": {
          "name": "live_heading",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "source_contributions": {
          "name": "source_contributions",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "fetched_at": {
          "name": "fetched_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "hfs_flight_num_date_idx": {
          "name": "hfs_flight_num_date_idx",
          "columns": [
            {
              "expression": "iata_flight_number",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "scheduled_departure_timestamp_utc",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "hfs_orig_dest_date_idx": {
          "name": "hfs_orig_dest_date_idx",
          "columns": [
            {
              "expression": "origin_airport_iata_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "destination_airport_iata_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "scheduled_departure_timestamp_utc",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "hfs_airline_idx": {
          "name": "hfs_airline_idx",
          "columns": [
            {
              "expression": "airline_icao_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "hfs_fetched_at_idx": {
          "name": "hfs_fetched_at_idx",
          "columns": [
            {
              "expression": "fetched_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "historical_flight_segments_airline_icao_code_airline_icao_code_fk": {
          "name": "historical_flight_segments_airline_icao_code_airline_icao_code_fk",
          "tableFrom": "historical_flight_segments",
          "tableTo": "airline",
          "columnsFrom": [
            "airline_icao_code"
          ],
          "columnsTo": [
            "icao_code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "historical_flight_segments_origin_airport_iata_code_airport_iata_code_fk": {
          "name": "historical_flight_segments_origin_airport_iata_code_airport_iata_code_fk",
          "tableFrom": "historical_flight_segments",
          "tableTo": "airport",
          "columnsFrom": [
            "origin_airport_iata_code"
          ],
          "columnsTo": [
            "iata_code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "historical_flight_segments_destination_airport_iata_code_airport_iata_code_fk": {
          "name": "historical_flight_segments_destination_airport_iata_code_airport_iata_code_fk",
          "tableFrom": "historical_flight_segments",
          "tableTo": "airport",
          "columnsFrom": [
            "destination_airport_iata_code"
          ],
          "columnsTo": [
            "iata_code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "historical_flight_segments_aircraft_icao_code_aircraft_types_icao_code_fk": {
          "name": "historical_flight_segments_aircraft_icao_code_aircraft_types_icao_code_fk",
          "tableFrom": "historical_flight_segments",
          "tableTo": "aircraft_types",
          "columnsFrom": [
            "aircraft_icao_code"
          ],
          "columnsTo": [
            "icao_code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.historical_weather_observations": {
      "name": "historical_weather_observations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "airport_iata_code": {
          "name": "airport_iata_code",
          "type": "char(3)",
          "primaryKey": false,
          "notNull": true
        },
        "observation_timestamp_utc": {
          "name": "observation_timestamp_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "forecast_period": {
          "name": "forecast_period",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "temperature_celsius": {
          "name": "temperature_celsius",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "min_temperature_celsius": {
          "name": "min_temperature_celsius",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "max_temperature_celsius": {
          "name": "max_temperature_celsius",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "feels_like_celsius": {
          "name": "feels_like_celsius",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "condition_code": {
          "name": "condition_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "condition_text": {
          "name": "condition_text",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "condition_type": {
          "name": "condition_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "wind_speed_kph": {
          "name": "wind_speed_kph",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "wind_direction_degrees": {
          "name": "wind_direction_degrees",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "wind_direction_cardinal": {
          "name": "wind_direction_cardinal",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "precipitation_mm_last_hour": {
          "name": "precipitation_mm_last_hour",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "precipitation_probability_percent": {
          "name": "precipitation_probability_percent",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "visibility_km": {
          "name": "visibility_km",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "humidity_percent": {
          "name": "humidity_percent",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "pressure_hpa": {
          "name": "pressure_hpa",
          "type": "numeric(6, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "sunrise_timestamp_utc": {
          "name": "sunrise_timestamp_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "sunset_timestamp_utc": {
          "name": "sunset_timestamp_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "moon_phase": {
          "name": "moon_phase",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "data_source_api": {
          "name": "data_source_api",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "fetched_at_utc": {
          "name": "fetched_at_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "raw_api_snapshot": {
          "name": "raw_api_snapshot",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "hwo_airport_time_idx": {
          "name": "hwo_airport_time_idx",
          "columns": [
            {
              "expression": "airport_iata_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "observation_timestamp_utc",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "forecast_period",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "hwo_data_source_idx": {
          "name": "hwo_data_source_idx",
          "columns": [
            {
              "expression": "data_source_api",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "historical_weather_observations_airport_iata_code_airport_iata_code_fk": {
          "name": "historical_weather_observations_airport_iata_code_airport_iata_code_fk",
          "tableFrom": "historical_weather_observations",
          "tableTo": "airport",
          "columnsFrom": [
            "airport_iata_code"
          ],
          "columnsTo": [
            "iata_code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.payout": {
      "name": "payout",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "policy_id": {
          "name": "policy_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "escrow_id": {
          "name": "escrow_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "amount": {
          "name": "amount",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "payout_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'PENDING'"
        },
        "chain": {
          "name": "chain",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "reason": {
          "name": "reason",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "flight_delay_minutes": {
          "name": "flight_delay_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "conditions_met": {
          "name": "conditions_met",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "tx_hash": {
          "name": "tx_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "block_number": {
          "name": "block_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "gas_used": {
          "name": "gas_used",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "processed_at": {
          "name": "processed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "error_message": {
          "name": "error_message",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "payout_policy_idx": {
          "name": "payout_policy_idx",
          "columns": [
            {
              "expression": "policy_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "payout_status_idx": {
          "name": "payout_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "payout_processed_idx": {
          "name": "payout_processed_idx",
          "columns": [
            {
              "expression": "processed_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "payout_policy_id_policy_id_fk": {
          "name": "payout_policy_id_policy_id_fk",
          "tableFrom": "payout",
          "tableTo": "policy",
          "columnsFrom": [
            "policy_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "payout_escrow_id_escrow_id_fk": {
          "name": "payout_escrow_id_escrow_id_fk",
          "tableFrom": "payout",
          "tableTo": "escrow",
          "columnsFrom": [
            "escrow_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.policy": {
      "name": "policy",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "policy_number": {
          "name": "policy_number",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "anonymous_session_id": {
          "name": "anonymous_session_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "flight_id": {
          "name": "flight_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "quote_id": {
          "name": "quote_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "coverage_type": {
          "name": "coverage_type",
          "type": "coverage_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "coverage_amount": {
          "name": "coverage_amount",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "premium": {
          "name": "premium",
          "type": "numeric(15, 6)",
          "primaryKey": false,
          "notNull": true
        },
        "payout_amount": {
          "name": "payout_amount",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "policy_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'PENDING'"
        },
        "chain": {
          "name": "chain",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "delay_threshold": {
          "name": "delay_threshold",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 60
        },
        "terms": {
          "name": "terms",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "activated_at": {
          "name": "activated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "policy_user_idx": {
          "name": "policy_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "policy_provider_idx": {
          "name": "policy_provider_idx",
          "columns": [
            {
              "expression": "provider_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "policy_flight_idx": {
          "name": "policy_flight_idx",
          "columns": [
            {
              "expression": "flight_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "policy_status_idx": {
          "name": "policy_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "policy_expires_idx": {
          "name": "policy_expires_idx",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "policy_number_idx": {
          "name": "policy_number_idx",
          "columns": [
            {
              "expression": "policy_number",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "policy_anon_session_idx": {
          "name": "policy_anon_session_idx",
          "columns": [
            {
              "expression": "anonymous_session_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "policy_user_id_user_id_fk": {
          "name": "policy_user_id_user_id_fk",
          "tableFrom": "policy",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "policy_provider_id_provider_id_fk": {
          "name": "policy_provider_id_provider_id_fk",
          "tableFrom": "policy",
          "tableTo": "provider",
          "columnsFrom": [
            "provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "policy_flight_id_flight_id_fk": {
          "name": "policy_flight_id_flight_id_fk",
          "tableFrom": "policy",
          "tableTo": "flight",
          "columnsFrom": [
            "flight_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "policy_quote_id_quote_id_fk": {
          "name": "policy_quote_id_quote_id_fk",
          "tableFrom": "policy",
          "tableTo": "quote",
          "columnsFrom": [
            "quote_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "policy_policy_number_unique": {
          "name": "policy_policy_number_unique",
          "nullsNotDistinct": false,
          "columns": [
            "policy_number"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "policy_user_check": {
          "name": "policy_user_check",
          "value": "(user_id IS NOT NULL) != (anonymous_session_id IS NOT NULL)"
        }
      },
      "isRLSEnabled": false
    },
    "public.policy_event": {
      "name": "policy_event",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "policy_id": {
          "name": "policy_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "policy_event_type_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "data": {
          "name": "data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "triggered_by_actor": {
          "name": "triggered_by_actor",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "policy_event_policy_idx": {
          "name": "policy_event_policy_idx",
          "columns": [
            {
              "expression": "policy_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "policy_event_type_idx": {
          "name": "policy_event_type_idx",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "policy_event_created_at_idx": {
          "name": "policy_event_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "policy_event_policy_id_policy_id_fk": {
          "name": "policy_event_policy_id_policy_id_fk",
          "tableFrom": "policy_event",
          "tableTo": "policy",
          "columnsFrom": [
            "policy_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.policy_verification_code": {
      "name": "policy_verification_code",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "policy_id": {
          "name": "policy_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "code": {
          "name": "code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "used_at": {
          "name": "used_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "verification_code_idx": {
          "name": "verification_code_idx",
          "columns": [
            {
              "expression": "code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "verification_policy_idx": {
          "name": "verification_policy_idx",
          "columns": [
            {
              "expression": "policy_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "policy_verification_code_policy_id_policy_id_fk": {
          "name": "policy_verification_code_policy_id_policy_id_fk",
          "tableFrom": "policy_verification_code",
          "tableTo": "policy",
          "columnsFrom": [
            "policy_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "policy_verification_code_code_unique": {
          "name": "policy_verification_code_code_unique",
          "nullsNotDistinct": false,
          "columns": [
            "code"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.provider": {
      "name": "provider",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "category": {
          "name": "category",
          "type": "provider_category",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "provider_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'PENDING'"
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "logo_url": {
          "name": "logo_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "website_url": {
          "name": "website_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "support_email": {
          "name": "support_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "wallet_address": {
          "name": "wallet_address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "wallet_private_key": {
          "name": "wallet_private_key",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "api_endpoint": {
          "name": "api_endpoint",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "webhook_secret": {
          "name": "webhook_secret",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "commission_rate": {
          "name": "commission_rate",
          "type": "numeric(5, 4)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0.0500'"
        },
        "tier": {
          "name": "tier",
          "type": "provider_tier_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'STANDARD'"
        },
        "business_address": {
          "name": "business_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "business_registration_number": {
          "name": "business_registration_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "payout_preference": {
          "name": "payout_preference",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "preferred_chain": {
          "name": "preferred_chain",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'PAYGO'"
        },
        "linked_airline_icao_code": {
          "name": "linked_airline_icao_code",
          "type": "char(3)",
          "primaryKey": false,
          "notNull": false
        },
        "escrow_model": {
          "name": "escrow_model",
          "type": "escrow_model_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'SINGLE_SIDED'"
        },
        "premium_return_policy": {
          "name": "premium_return_policy",
          "type": "premium_return_policy",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'PROVIDER_KEEPS_PREMIUM'"
        },
        "collateral_requirement": {
          "name": "collateral_requirement",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0.00'"
        },
        "pool_address": {
          "name": "pool_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "pool_minimum_balance": {
          "name": "pool_minimum_balance",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0.00'"
        },
        "escrow_configuration": {
          "name": "escrow_configuration",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "provider_linked_airline_icao_code_airline_icao_code_fk": {
          "name": "provider_linked_airline_icao_code_airline_icao_code_fk",
          "tableFrom": "provider",
          "tableTo": "airline",
          "columnsFrom": [
            "linked_airline_icao_code"
          ],
          "columnsTo": [
            "icao_code"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "provider_slug_unique": {
          "name": "provider_slug_unique",
          "nullsNotDistinct": false,
          "columns": [
            "slug"
          ]
        },
        "provider_wallet_address_unique": {
          "name": "provider_wallet_address_unique",
          "nullsNotDistinct": false,
          "columns": [
            "wallet_address"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.provider_product": {
      "name": "provider_product",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "coverage_type": {
          "name": "coverage_type",
          "type": "coverage_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "base_rate": {
          "name": "base_rate",
          "type": "numeric(10, 6)",
          "primaryKey": false,
          "notNull": true
        },
        "max_coverage": {
          "name": "max_coverage",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "min_coverage": {
          "name": "min_coverage",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "terms_url": {
          "name": "terms_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "product_status_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'DRAFT'"
        },
        "product_category": {
          "name": "product_category",
          "type": "product_category_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "configuration": {
          "name": "configuration",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "published_at": {
          "name": "published_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "provider_product_provider_id_provider_id_fk": {
          "name": "provider_product_provider_id_provider_id_fk",
          "tableFrom": "provider_product",
          "tableTo": "provider",
          "columnsFrom": [
            "provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.quote": {
      "name": "quote",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "flight_id": {
          "name": "flight_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "coverage_type": {
          "name": "coverage_type",
          "type": "coverage_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "coverage_amount": {
          "name": "coverage_amount",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "premium": {
          "name": "premium",
          "type": "numeric(15, 6)",
          "primaryKey": false,
          "notNull": true
        },
        "risk_factors": {
          "name": "risk_factors",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "confidence": {
          "name": "confidence",
          "type": "numeric(5, 4)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0.8500'"
        },
        "status": {
          "name": "status",
          "type": "quote_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'PENDING'"
        },
        "valid_until": {
          "name": "valid_until",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "quote_user_idx": {
          "name": "quote_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "quote_provider_idx": {
          "name": "quote_provider_idx",
          "columns": [
            {
              "expression": "provider_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "quote_flight_idx": {
          "name": "quote_flight_idx",
          "columns": [
            {
              "expression": "flight_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "quote_valid_until_idx": {
          "name": "quote_valid_until_idx",
          "columns": [
            {
              "expression": "valid_until",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "quote_user_id_user_id_fk": {
          "name": "quote_user_id_user_id_fk",
          "tableFrom": "quote",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "quote_provider_id_provider_id_fk": {
          "name": "quote_provider_id_provider_id_fk",
          "tableFrom": "quote",
          "tableTo": "provider",
          "columnsFrom": [
            "provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "quote_flight_id_flight_id_fk": {
          "name": "quote_flight_id_flight_id_fk",
          "tableFrom": "quote",
          "tableTo": "flight",
          "columnsFrom": [
            "flight_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.quote_cart_items": {
      "name": "quote_cart_items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "anonymous_session_id": {
          "name": "anonymous_session_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "insurance_product_id": {
          "name": "insurance_product_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "flight_context_snapshot": {
          "name": "flight_context_snapshot",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "quoted_premium_cents": {
          "name": "quoted_premium_cents",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "quoted_coverage_cents": {
          "name": "quoted_coverage_cents",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "quote_details": {
          "name": "quote_details",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "added_at": {
          "name": "added_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "status": {
          "name": "status",
          "type": "quote_cart_item_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'PENDING'"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "quote_cart_user_idx": {
          "name": "quote_cart_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "quote_cart_anon_session_idx": {
          "name": "quote_cart_anon_session_idx",
          "columns": [
            {
              "expression": "anonymous_session_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "quote_cart_status_idx": {
          "name": "quote_cart_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "quote_cart_expires_idx": {
          "name": "quote_cart_expires_idx",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "quote_cart_items_user_id_user_id_fk": {
          "name": "quote_cart_items_user_id_user_id_fk",
          "tableFrom": "quote_cart_items",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.raw_api_call_logs": {
      "name": "raw_api_call_logs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "api_source": {
          "name": "api_source",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "request_timestamp_utc": {
          "name": "request_timestamp_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "request_url": {
          "name": "request_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "request_method": {
          "name": "request_method",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "request_headers": {
          "name": "request_headers",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "request_body": {
          "name": "request_body",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "response_timestamp_utc": {
          "name": "response_timestamp_utc",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "response_status_code": {
          "name": "response_status_code",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "response_headers": {
          "name": "response_headers",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "response_body": {
          "name": "response_body",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "is_success": {
          "name": "is_success",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "duration_ms": {
          "name": "duration_ms",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "associated_flight_id": {
          "name": "associated_flight_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "associated_policy_id": {
          "name": "associated_policy_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "log_api_source_idx": {
          "name": "log_api_source_idx",
          "columns": [
            {
              "expression": "api_source",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "log_request_ts_idx": {
          "name": "log_request_ts_idx",
          "columns": [
            {
              "expression": "request_timestamp_utc",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "log_status_idx": {
          "name": "log_status_idx",
          "columns": [
            {
              "expression": "is_success",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "raw_api_call_logs_associated_flight_id_flight_id_fk": {
          "name": "raw_api_call_logs_associated_flight_id_flight_id_fk",
          "tableFrom": "raw_api_call_logs",
          "tableTo": "flight",
          "columnsFrom": [
            "associated_flight_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "raw_api_call_logs_associated_policy_id_policy_id_fk": {
          "name": "raw_api_call_logs_associated_policy_id_policy_id_fk",
          "tableFrom": "raw_api_call_logs",
          "tableTo": "policy",
          "columnsFrom": [
            "associated_policy_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.regions": {
      "name": "regions",
      "schema": "",
      "columns": {
        "code": {
          "name": "code",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "local_code": {
          "name": "local_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "continent": {
          "name": "continent",
          "type": "continent_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "country_iso_code": {
          "name": "country_iso_code",
          "type": "char(2)",
          "primaryKey": false,
          "notNull": true
        },
        "wikipedia_link": {
          "name": "wikipedia_link",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "keywords": {
          "name": "keywords",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "regions_country_iso_code_countries_iso_code_fk": {
          "name": "regions_country_iso_code_countries_iso_code_fk",
          "tableFrom": "regions",
          "tableTo": "countries",
          "columnsFrom": [
            "country_iso_code"
          ],
          "columnsTo": [
            "iso_code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.revenue": {
      "name": "revenue",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "policy_id": {
          "name": "policy_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "escrow_id": {
          "name": "escrow_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "amount": {
          "name": "amount",
          "type": "numeric(15, 6)",
          "primaryKey": false,
          "notNull": true
        },
        "currency": {
          "name": "currency",
          "type": "char(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "'USD'"
        },
        "type": {
          "name": "type",
          "type": "revenue_type_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "transaction_date": {
          "name": "transaction_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "processed_at": {
          "name": "processed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "reference_id": {
          "name": "reference_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "revenue_policy_idx": {
          "name": "revenue_policy_idx",
          "columns": [
            {
              "expression": "policy_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "revenue_provider_idx": {
          "name": "revenue_provider_idx",
          "columns": [
            {
              "expression": "provider_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "revenue_user_idx": {
          "name": "revenue_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "revenue_escrow_idx": {
          "name": "revenue_escrow_idx",
          "columns": [
            {
              "expression": "escrow_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "revenue_type_idx": {
          "name": "revenue_type_idx",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "revenue_transaction_date_idx": {
          "name": "revenue_transaction_date_idx",
          "columns": [
            {
              "expression": "transaction_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "revenue_policy_id_policy_id_fk": {
          "name": "revenue_policy_id_policy_id_fk",
          "tableFrom": "revenue",
          "tableTo": "policy",
          "columnsFrom": [
            "policy_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "revenue_provider_id_provider_id_fk": {
          "name": "revenue_provider_id_provider_id_fk",
          "tableFrom": "revenue",
          "tableTo": "provider",
          "columnsFrom": [
            "provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "revenue_user_id_user_id_fk": {
          "name": "revenue_user_id_user_id_fk",
          "tableFrom": "revenue",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "revenue_escrow_id_escrow_id_fk": {
          "name": "revenue_escrow_id_escrow_id_fk",
          "tableFrom": "revenue",
          "tableTo": "escrow",
          "columnsFrom": [
            "escrow_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "revenue_reference_id_unique": {
          "name": "revenue_reference_id_unique",
          "nullsNotDistinct": true,
          "columns": [
            "reference_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.revenue_sharing_rule": {
      "name": "revenue_sharing_rule",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "rule_name": {
          "name": "rule_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider_product_id": {
          "name": "provider_product_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "platform_fee_percentage": {
          "name": "platform_fee_percentage",
          "type": "numeric(7, 6)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0.000000'"
        },
        "provider_share_percentage": {
          "name": "provider_share_percentage",
          "type": "numeric(7, 6)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0.000000'"
        },
        "applicable_from": {
          "name": "applicable_from",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "applicable_to": {
          "name": "applicable_to",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "priority": {
          "name": "priority",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "rev_share_active_idx": {
          "name": "rev_share_active_idx",
          "columns": [
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "rev_share_priority_idx": {
          "name": "rev_share_priority_idx",
          "columns": [
            {
              "expression": "priority",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "revenue_sharing_rule_provider_id_provider_id_fk": {
          "name": "revenue_sharing_rule_provider_id_provider_id_fk",
          "tableFrom": "revenue_sharing_rule",
          "tableTo": "provider",
          "columnsFrom": [
            "provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "revenue_sharing_rule_provider_product_id_provider_product_id_fk": {
          "name": "revenue_sharing_rule_provider_product_id_provider_product_id_fk",
          "tableFrom": "revenue_sharing_rule",
          "tableTo": "provider_product",
          "columnsFrom": [
            "provider_product_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "rev_share_provider_prod_from_unique": {
          "name": "rev_share_provider_prod_from_unique",
          "nullsNotDistinct": false,
          "columns": [
            "provider_id",
            "provider_product_id",
            "applicable_from"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.routes": {
      "name": "routes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "airline_icao_code": {
          "name": "airline_icao_code",
          "type": "char(3)",
          "primaryKey": false,
          "notNull": false
        },
        "source_airport_iata_code": {
          "name": "source_airport_iata_code",
          "type": "char(3)",
          "primaryKey": false,
          "notNull": true
        },
        "destination_airport_iata_code": {
          "name": "destination_airport_iata_code",
          "type": "char(3)",
          "primaryKey": false,
          "notNull": true
        },
        "codeshare": {
          "name": "codeshare",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "stops": {
          "name": "stops",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "equipment": {
          "name": "equipment",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "route_airline_idx": {
          "name": "route_airline_idx",
          "columns": [
            {
              "expression": "airline_icao_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "route_source_airport_idx": {
          "name": "route_source_airport_idx",
          "columns": [
            {
              "expression": "source_airport_iata_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "route_destination_airport_idx": {
          "name": "route_destination_airport_idx",
          "columns": [
            {
              "expression": "destination_airport_iata_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "routes_airline_icao_code_airline_icao_code_fk": {
          "name": "routes_airline_icao_code_airline_icao_code_fk",
          "tableFrom": "routes",
          "tableTo": "airline",
          "columnsFrom": [
            "airline_icao_code"
          ],
          "columnsTo": [
            "icao_code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "routes_source_airport_iata_code_airport_iata_code_fk": {
          "name": "routes_source_airport_iata_code_airport_iata_code_fk",
          "tableFrom": "routes",
          "tableTo": "airport",
          "columnsFrom": [
            "source_airport_iata_code"
          ],
          "columnsTo": [
            "iata_code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "routes_destination_airport_iata_code_airport_iata_code_fk": {
          "name": "routes_destination_airport_iata_code_airport_iata_code_fk",
          "tableFrom": "routes",
          "tableTo": "airport",
          "columnsFrom": [
            "destination_airport_iata_code"
          ],
          "columnsTo": [
            "iata_code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_operational_route": {
          "name": "unique_operational_route",
          "nullsNotDistinct": false,
          "columns": [
            "airline_icao_code",
            "source_airport_iata_code",
            "destination_airport_iata_code"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.runways": {
      "name": "runways",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true
        },
        "airport_iata_code": {
          "name": "airport_iata_code",
          "type": "char(3)",
          "primaryKey": false,
          "notNull": true
        },
        "length_ft": {
          "name": "length_ft",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "width_ft": {
          "name": "width_ft",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "surface": {
          "name": "surface",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "lighted": {
          "name": "lighted",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "closed": {
          "name": "closed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "le_ident": {
          "name": "le_ident",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "he_ident": {
          "name": "he_ident",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "runways_airport_iata_code_airport_iata_code_fk": {
          "name": "runways_airport_iata_code_airport_iata_code_fk",
          "tableFrom": "runways",
          "tableTo": "airport",
          "columnsFrom": [
            "airport_iata_code"
          ],
          "columnsTo": [
            "iata_code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.scheduled_task": {
      "name": "scheduled_task",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "task_name": {
          "name": "task_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "task_type": {
          "name": "task_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "cron_expression": {
          "name": "cron_expression",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "run_at": {
          "name": "run_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "payload": {
          "name": "payload",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "scheduled_task_status_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'ACTIVE'"
        },
        "timezone": {
          "name": "timezone",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'UTC'"
        },
        "last_run_at": {
          "name": "last_run_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "next_run_at": {
          "name": "next_run_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "last_run_status": {
          "name": "last_run_status",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "last_run_duration_ms": {
          "name": "last_run_duration_ms",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "max_retries": {
          "name": "max_retries",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 3
        },
        "retry_delay_seconds": {
          "name": "retry_delay_seconds",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 60
        },
        "timeout_seconds": {
          "name": "timeout_seconds",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 3600
        },
        "is_singleton": {
          "name": "is_singleton",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "scheduled_task_status_idx": {
          "name": "scheduled_task_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "scheduled_task_next_run_at_idx": {
          "name": "scheduled_task_next_run_at_idx",
          "columns": [
            {
              "expression": "next_run_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "scheduled_task_type_idx": {
          "name": "scheduled_task_type_idx",
          "columns": [
            {
              "expression": "task_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "scheduled_task_name_unique": {
          "name": "scheduled_task_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "task_name"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.session": {
      "name": "session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "session_user_id_user_id_fk": {
          "name": "session_user_id_user_id_fk",
          "tableFrom": "session",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "session_token_unique": {
          "name": "session_token_unique",
          "nullsNotDistinct": false,
          "columns": [
            "token"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.system_configuration": {
      "name": "system_configuration",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "category": {
          "name": "category",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'GENERAL'"
        },
        "is_editable_runtime": {
          "name": "is_editable_runtime",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "is_secret": {
          "name": "is_secret",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "system_configuration_category_idx": {
          "name": "system_configuration_category_idx",
          "columns": [
            {
              "expression": "category",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "system_configuration_key_unique": {
          "name": "system_configuration_key_unique",
          "nullsNotDistinct": false,
          "columns": [
            "key"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.task_execution": {
      "name": "task_execution",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "scheduled_task_id": {
          "name": "scheduled_task_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "task_execution_status_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "started_at": {
          "name": "started_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "duration_ms": {
          "name": "duration_ms",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "output": {
          "name": "output",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "error_message": {
          "name": "error_message",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "error_details": {
          "name": "error_details",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "worker_id": {
          "name": "worker_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "task_execution_scheduled_task_idx": {
          "name": "task_execution_scheduled_task_idx",
          "columns": [
            {
              "expression": "scheduled_task_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "task_execution_status_idx": {
          "name": "task_execution_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "task_execution_started_at_idx": {
          "name": "task_execution_started_at_idx",
          "columns": [
            {
              "expression": "started_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "task_execution_scheduled_task_id_scheduled_task_id_fk": {
          "name": "task_execution_scheduled_task_id_scheduled_task_id_fk",
          "tableFrom": "task_execution",
          "tableTo": "scheduled_task",
          "columnsFrom": [
            "scheduled_task_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user": {
      "name": "user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_email_unique": {
          "name": "user_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_payment_methods": {
      "name": "user_payment_methods",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "anonymous_session_id": {
          "name": "anonymous_session_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "payment_provider": {
          "name": "payment_provider",
          "type": "payment_provider",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "provider_customer_id": {
          "name": "provider_customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider_method_id": {
          "name": "provider_method_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "method_type": {
          "name": "method_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "details": {
          "name": "details",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "is_default": {
          "name": "is_default",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "user_payment_methods_user_idx": {
          "name": "user_payment_methods_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_payment_methods_provider_idx": {
          "name": "user_payment_methods_provider_idx",
          "columns": [
            {
              "expression": "payment_provider",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_payment_methods_anon_session_idx": {
          "name": "user_payment_methods_anon_session_idx",
          "columns": [
            {
              "expression": "anonymous_session_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "user_payment_methods_user_id_user_id_fk": {
          "name": "user_payment_methods_user_id_user_id_fk",
          "tableFrom": "user_payment_methods",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_payment_methods_provider_method_id_unique": {
          "name": "user_payment_methods_provider_method_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "provider_method_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "user_payment_methods_user_check": {
          "name": "user_payment_methods_user_check",
          "value": "(user_id IS NOT NULL) != (anonymous_session_id IS NOT NULL)"
        }
      },
      "isRLSEnabled": false
    },
    "public.user_wallets": {
      "name": "user_wallets",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "anonymous_session_id": {
          "name": "anonymous_session_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "chain": {
          "name": "chain",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "wallet_type": {
          "name": "wallet_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "public_key": {
          "name": "public_key",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "encrypted_secret": {
          "name": "encrypted_secret",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "kms_key_id": {
          "name": "kms_key_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "wallet_name": {
          "name": "wallet_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'triggerr Wallet'"
        },
        "is_primary": {
          "name": "is_primary",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "key_exported_at": {
          "name": "key_exported_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "last_balance_check": {
          "name": "last_balance_check",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "cached_balance_amount": {
          "name": "cached_balance_amount",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "balance_currency": {
          "name": "balance_currency",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'PAYGO_TOKEN'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "user_wallets_user_idx": {
          "name": "user_wallets_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_wallets_address_idx": {
          "name": "user_wallets_address_idx",
          "columns": [
            {
              "expression": "address",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_wallets_chain_idx": {
          "name": "user_wallets_chain_idx",
          "columns": [
            {
              "expression": "chain",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_wallets_anon_session_idx": {
          "name": "user_wallets_anon_session_idx",
          "columns": [
            {
              "expression": "anonymous_session_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "user_wallets_user_id_user_id_fk": {
          "name": "user_wallets_user_id_user_id_fk",
          "tableFrom": "user_wallets",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_wallets_user_chain_unique": {
          "name": "user_wallets_user_chain_unique",
          "nullsNotDistinct": false,
          "columns": [
            "user_id",
            "chain"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "user_wallets_user_check": {
          "name": "user_wallets_user_check",
          "value": "(user_id IS NOT NULL) != (anonymous_session_id IS NOT NULL)"
        }
      },
      "isRLSEnabled": false
    },
    "public.verification": {
      "name": "verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.webhook": {
      "name": "webhook",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "target_url": {
          "name": "target_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "subscribed_events": {
          "name": "subscribed_events",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "secret": {
          "name": "secret",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "last_triggered_at": {
          "name": "last_triggered_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "failure_count": {
          "name": "failure_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "webhook_target_url_idx": {
          "name": "webhook_target_url_idx",
          "columns": [
            {
              "expression": "target_url",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "webhook_user_idx": {
          "name": "webhook_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "webhook_provider_idx": {
          "name": "webhook_provider_idx",
          "columns": [
            {
              "expression": "provider_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "webhook_active_idx": {
          "name": "webhook_active_idx",
          "columns": [
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "webhook_user_id_user_id_fk": {
          "name": "webhook_user_id_user_id_fk",
          "tableFrom": "webhook",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "webhook_provider_id_provider_id_fk": {
          "name": "webhook_provider_id_provider_id_fk",
          "tableFrom": "webhook",
          "tableTo": "provider",
          "columnsFrom": [
            "provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.webhook_delivery": {
      "name": "webhook_delivery",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "generate_ulid()"
        },
        "webhook_id": {
          "name": "webhook_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "event_id": {
          "name": "event_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "event_type": {
          "name": "event_type",
          "type": "webhook_event_type_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "payload": {
          "name": "payload",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "attempt_count": {
          "name": "attempt_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "status": {
          "name": "status",
          "type": "webhook_delivery_status_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'PENDING'"
        },
        "last_attempt_at": {
          "name": "last_attempt_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "next_attempt_at": {
          "name": "next_attempt_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "response_status_code": {
          "name": "response_status_code",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "response_body": {
          "name": "response_body",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "duration_ms": {
          "name": "duration_ms",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "webhook_delivery_webhook_idx": {
          "name": "webhook_delivery_webhook_idx",
          "columns": [
            {
              "expression": "webhook_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "webhook_delivery_status_idx": {
          "name": "webhook_delivery_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "webhook_delivery_event_id_idx": {
          "name": "webhook_delivery_event_id_idx",
          "columns": [
            {
              "expression": "event_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "webhook_delivery_next_attempt_idx": {
          "name": "webhook_delivery_next_attempt_idx",
          "columns": [
            {
              "expression": "next_attempt_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "webhook_delivery_webhook_id_webhook_id_fk": {
          "name": "webhook_delivery_webhook_id_webhook_id_fk",
          "tableFrom": "webhook_delivery",
          "tableTo": "webhook",
          "columnsFrom": [
            "webhook_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.api_key_type": {
      "name": "api_key_type",
      "schema": "public",
      "values": [
        "PUBLIC",
        "SECRET",
        "WEBHOOK"
      ]
    },
    "public.beneficiary_type_enum": {
      "name": "beneficiary_type_enum",
      "schema": "public",
      "values": [
        "PRIMARY",
        "CONTINGENT"
      ]
    },
    "public.continent_enum": {
      "name": "continent_enum",
      "schema": "public",
      "values": [
        "AF",
        "AN",
        "AS",
        "EU",
        "NA",
        "OC",
        "SA"
      ]
    },
    "public.conversation_message_role": {
      "name": "conversation_message_role",
      "schema": "public",
      "values": [
        "user",
        "assistant",
        "system"
      ]
    },
    "public.coverage_type": {
      "name": "coverage_type",
      "schema": "public",
      "values": [
        "DELAY_60",
        "DELAY_120",
        "CANCELLATION",
        "BAGGAGE",
        "COMPREHENSIVE",
        "CUSTOM"
      ]
    },
    "public.endorsement_type_enum": {
      "name": "endorsement_type_enum",
      "schema": "public",
      "values": [
        "COVERAGE_ADJUSTMENT",
        "INFO_CORRECTION",
        "OTHER"
      ]
    },
    "public.escrow_model_type": {
      "name": "escrow_model_type",
      "schema": "public",
      "values": [
        "SINGLE_SIDED",
        "DUAL_SIDED",
        "COMBINED",
        "HYBRID_PARTIAL_COLLATERAL",
        "COLLATERALIZED_PROVIDER_POOL",
        "BONDED_LIABILITY_POOL",
        "PEER_TO_PEER_POOL",
        "SUBSCRIPTION_BASED_POOL",
        "DYNAMIC_RISK_POOL",
        "PREDICTION_MARKET",
        "SYNTHETIC_DEFI_COVERAGE",
        "NFT_POLICY",
        "DAO_GOVERNED_POOL",
        "MULTI_ORACLE_VERIFIED"
      ]
    },
    "public.escrow_purpose_enum": {
      "name": "escrow_purpose_enum",
      "schema": "public",
      "values": [
        "DEPOSIT",
        "WITHDRAW",
        "STAKE",
        "BOND",
        "COLLATERAL",
        "INVESTMENT",
        "RESERVE",
        "POOL",
        "CUSTOM"
      ]
    },
    "public.escrow_status": {
      "name": "escrow_status",
      "schema": "public",
      "values": [
        "PENDING",
        "FULFILLED",
        "RELEASED",
        "EXPIRED",
        "CANCELLED"
      ]
    },
    "public.escrow_type_enum": {
      "name": "escrow_type_enum",
      "schema": "public",
      "values": [
        "POLICY",
        "USER_WALLET"
      ]
    },
    "public.flight_status": {
      "name": "flight_status",
      "schema": "public",
      "values": [
        "SCHEDULED",
        "ACTIVE",
        "LANDED",
        "CANCELLED",
        "DIVERTED",
        "DELAYED"
      ]
    },
    "public.payment_provider": {
      "name": "payment_provider",
      "schema": "public",
      "values": [
        "STRIPE",
        "PAYGO_CUSTODIAL"
      ]
    },
    "public.payout_status": {
      "name": "payout_status",
      "schema": "public",
      "values": [
        "PENDING",
        "PROCESSING",
        "COMPLETED",
        "FAILED",
        "CANCELLED"
      ]
    },
    "public.policy_event_type_enum": {
      "name": "policy_event_type_enum",
      "schema": "public",
      "values": [
        "POLICY_CREATED",
        "PREMIUM_CALCULATED",
        "PAYMENT_PENDING",
        "PAYMENT_RECEIVED",
        "POLICY_ACTIVATED",
        "FLIGHT_MONITORING_ACTIVE",
        "FLIGHT_EVENT_DETECTED",
        "CLAIM_CONDITION_MET",
        "CLAIM_INITIATED",
        "PAYOUT_PROCESSING",
        "PAYOUT_COMPLETED",
        "PAYOUT_FAILED",
        "POLICY_EXPIRED",
        "POLICY_CANCELLED_USER",
        "POLICY_CANCELLED_SYSTEM",
        "POLICY_UPDATED",
        "REFUND_PROCESSED"
      ]
    },
    "public.policy_status": {
      "name": "policy_status",
      "schema": "public",
      "values": [
        "PENDING",
        "ACTIVE",
        "EXPIRED",
        "CLAIMED",
        "CANCELLED",
        "FAILED"
      ]
    },
    "public.premium_return_policy": {
      "name": "premium_return_policy",
      "schema": "public",
      "values": [
        "PROVIDER_KEEPS_PREMIUM",
        "RETURN_TO_CUSTOMER"
      ]
    },
    "public.product_category_enum": {
      "name": "product_category_enum",
      "schema": "public",
      "values": [
        "FLIGHT_PARAMETRIC",
        "TRAVEL_COMPREHENSIVE",
        "GADGET_INSURANCE",
        "WEATHER_PARAMETRIC",
        "EVENT_CANCELLATION",
        "SHIPPING_CARGO",
        "CUSTOM_PARAMETRIC",
        "GENERAL_INSURANCE"
      ]
    },
    "public.product_status_enum": {
      "name": "product_status_enum",
      "schema": "public",
      "values": [
        "DRAFT",
        "PENDING_APPROVAL",
        "PUBLISHED",
        "SUSPENDED",
        "ARCHIVED"
      ]
    },
    "public.provider_category": {
      "name": "provider_category",
      "schema": "public",
      "values": [
        "FIRST_PARTY_INSURER",
        "THIRD_PARTY_INSURER",
        "B2B_FINANCIAL_SERVICES",
        "OTA_PROVIDER"
      ]
    },
    "public.provider_status": {
      "name": "provider_status",
      "schema": "public",
      "values": [
        "ACTIVE",
        "INACTIVE",
        "PENDING",
        "SUSPENDED"
      ]
    },
    "public.provider_tier_enum": {
      "name": "provider_tier_enum",
      "schema": "public",
      "values": [
        "STARTUP",
        "STANDARD",
        "PREMIUM",
        "ENTERPRISE"
      ]
    },
    "public.quote_cart_item_status": {
      "name": "quote_cart_item_status",
      "schema": "public",
      "values": [
        "PENDING",
        "PURCHASED",
        "EXPIRED",
        "REMOVED"
      ]
    },
    "public.quote_status": {
      "name": "quote_status",
      "schema": "public",
      "values": [
        "PENDING",
        "ACCEPTED",
        "EXPIRED",
        "REJECTED"
      ]
    },
    "public.revenue_type_enum": {
      "name": "revenue_type_enum",
      "schema": "public",
      "values": [
        "PLATFORM_FEE",
        "PROVIDER_SHARE",
        "TRANSACTION_FEE",
        "ADJUSTMENT",
        "PENALTY",
        "BONUS"
      ]
    },
    "public.scheduled_task_status_enum": {
      "name": "scheduled_task_status_enum",
      "schema": "public",
      "values": [
        "PENDING",
        "ACTIVE",
        "RUNNING",
        "COMPLETED",
        "FAILED",
        "DISABLED"
      ]
    },
    "public.task_execution_status_enum": {
      "name": "task_execution_status_enum",
      "schema": "public",
      "values": [
        "QUEUED",
        "RUNNING",
        "COMPLETED",
        "FAILED",
        "CANCELLED",
        "TIMED_OUT"
      ]
    },
    "public.webhook_delivery_status_enum": {
      "name": "webhook_delivery_status_enum",
      "schema": "public",
      "values": [
        "PENDING",
        "DELIVERED",
        "FAILED",
        "RETRYING",
        "ABANDONED"
      ]
    },
    "public.webhook_event_type_enum": {
      "name": "webhook_event_type_enum",
      "schema": "public",
      "values": [
        "POLICY_CREATED",
        "POLICY_ACTIVATED",
        "POLICY_CANCELLED",
        "POLICY_EXPIRED",
        "PAYMENT_RECEIVED",
        "PAYOUT_INITIATED",
        "PAYOUT_COMPLETED",
        "PAYOUT_FAILED",
        "FLIGHT_DELAY_CONFIRMED",
        "FLIGHT_CANCELLED_CONFIRMED"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}